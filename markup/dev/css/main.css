/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: er; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

@font-face {
  font-family: 'icomoon';
  src: url("../fonts/icomoon/icomoon.eot?vg8o1t");
  src: url("../fonts/icomoon/icomoon.eot?vg8o1t#iefix") format("embedded-opentype"), url("../fonts/icomoon/icomoon.ttf?vg8o1t") format("truetype"), url("../fonts/icomoon/icomoon.woff?vg8o1t") format("woff"), url("../fonts/icomoon/icomoon.svg?vg8o1t#icomoon") format("svg");
  font-weight: normal;
  font-style: normal; }

[class^="icon-"],
[class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-play:before {
  content: "\e900"; }

.icon-right-arrow:before {
  content: "\e901"; }

.icon-left-arrow:before {
  content: "\e902"; }

.icon-search:before {
  content: "\e903"; }

.icon-arrow-down:before {
  content: "\e904"; }

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  height: 100%; }

*, *:before, *:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

* {
  max-height: 1000000px; }

body {
  font: 300 15px/2 "Lato", "Arial", "Helvetica Neue", "Helvetica", sans-serif;
  background: #fff;
  min-width: 320px;
  color: #5a5a5a; }

img {
  max-width: 100%;
  height: auto; }

.button {
  color: #fff;
  -webkit-border-radius: 24px;
          border-radius: 24px;
  padding: 15px 15px;
  font-size: 15px;
  font-weight: 700;
  line-height: 1;
  text-transform: uppercase;
  background-color: #ed145b;
  border: 1px solid transparent;
  outline: none;
  -webkit-transition: -webkit-border-radius 0.3s ease-in-out;
  transition: -webkit-border-radius 0.3s ease-in-out;
  -o-transition: border-radius 0.3s ease-in-out;
  transition: border-radius 0.3s ease-in-out;
  transition: border-radius 0.3s ease-in-out, -webkit-border-radius 0.3s ease-in-out;
  cursor: pointer;
  min-width: 200px;
  display: inline-block;
  vertical-align: top; }
  .button:hover {
    -webkit-border-radius: 5px;
            border-radius: 5px; }

.navigation-drop .nav-menu, .list-items, .price-items, .price-item ul, .info-items, .updates-info {
  margin: 0;
  padding: 0;
  list-style: none; }

.clearfix:after, .container:after {
  content: '';
  display: block;
  clear: both; }

h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6,
.h {
  font-family: "Lato", "Arial", "Helvetica Neue", "Helvetica", sans-serif;
  line-height: 1.5;
  margin: 0 0 30px;
  color: #5a5a5a; }
  h1:last-child, .h1:last-child,
  h2:last-child, .h2:last-child,
  h3:last-child, .h3:last-child,
  h4:last-child, .h4:last-child,
  h5:last-child, .h5:last-child,
  h6:last-child, .h6:last-child,
  .h:last-child {
    margin: 0; }

h1, .h1 {
  font-size: 46px;
  font-weight: 300;
  color: #fff; }
  h1 mark, .h1 mark {
    background: transparent;
    color: #fff;
    font-weight: 800; }

h2, .h2 {
  font-size: 38px;
  color: #5a5a5a;
  font-weight: 300;
  font-style: italic; }

h3, .h3 {
  font-size: 15px; }

h4, .h4 {
  font-size: 22px; }

h5, .h5 {
  font-size: 18px; }

h6, .h6 {
  font-size: 14px; }

a {
  text-decoration: none;
  color: #ed145b;
  outline: none;
  font-weight: 400;
  -webkit-transition: color 0.3s ease-in-out;
  -o-transition: color 0.3s ease-in-out;
  transition: color 0.3s ease-in-out; }
  a:hover, a:focus {
    color: #ed145b; }

p {
  margin: 0 0 30px; }
  p:last-child {
    margin: 0; }

blockquote {
  margin: 0 100px;
  color: #fff;
  font-size: 25px;
  font-style: italic; }
  blockquote cite {
    padding-top: 40px; }

@media (max-width: 1023px) {
  blockquote {
    line-height: 1.2;
    margin: 0 30px; }
    blockquote q {
      font-size: 15px; }
    blockquote cite {
      font-size: 15px; } }

.navigation-drop .nav-menu, .list-items, .price-items, .price-item ul, .info-items, .updates-info {
  margin: 0;
  padding: 0;
  list-style: none; }

.clearfix:after, .container:after {
  content: '';
  display: block;
  clear: both; }

.container {
  max-width: 1170px;
  margin: 0 auto;
  padding: 0 15px; }

.wrapper {
  position: relative;
  overflow: hidden; }

.header {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  z-index: 2;
  padding: 40px 0; }

@media (max-width: 767px) {
  .header {
    padding: 30px 0; } }

.main {
  position: relative;
  z-index: 1; }

.footer {
  background: #2b2b2b;
  padding: 65px 0;
  color: #fff;
  text-transform: uppercase;
  line-height: 1.2; }
  .footer .copyright {
    float: left; }
  .footer .design {
    float: right; }
    .footer .design a {
      padding-left: 5px;
      font-weight: 600;
      color: #fff; }
      .footer .design a:hover {
        color: #ed145b; }
      .footer .design a .link-element {
        color: #d42a44; }

@media (max-width: 479px) {
  .footer {
    text-align: center; }
    .footer .copyright {
      float: none;
      display: block;
      padding: 0 0 15px; }
    .footer .design {
      float: none; } }

@media (max-width: 1023px) {
  .footer {
    padding: 25px 0; } }

.logo {
  float: left; }
  .logo a {
    display: block; }
    .logo a img {
      display: inline-block;
      vertical-align: top; }

.navigation {
  float: right; }
  .navigation-opener {
    display: none;
    width: 20px;
    height: 30px;
    position: relative;
    z-index: 3; }
    .navigation-opener span {
      position: absolute;
      right: 100%;
      padding-right: 15px;
      -webkit-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
      -o-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
      transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
      color: #fff; }
      .navigation-opener span:after {
        content: '';
        position: absolute;
        right: 0;
        left: 100%;
        width: 20px;
        height: 2px;
        background: #fff;
        top: 50%;
        visibility: visible;
        opacity: 1;
        -webkit-transition: visibility 0.3s ease-in-out, opacity 0.3s ease-in-out;
        -o-transition: visibility 0.3s ease-in-out, opacity 0.3s ease-in-out;
        transition: visibility 0.3s ease-in-out, opacity 0.3s ease-in-out; }
    .navigation-opener:before, .navigation-opener:after {
      content: '';
      position: absolute;
      top: 8px;
      left: 0;
      right: 0;
      height: 2px;
      background: #fff;
      display: block;
      -webkit-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
      transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
      -o-transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
      transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
      transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out, visibility 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out; }
    .navigation-opener:after {
      top: auto;
      bottom: 7px; }
    .navigation-active .navigation-opener:after, .navigation-active .navigation-opener:before {
      content: '';
      -webkit-transform: rotate(-45deg);
          -ms-transform: rotate(-45deg);
              transform: rotate(-45deg);
      top: 50%; }
    .navigation-active .navigation-opener:before {
      -webkit-transform: rotate(45deg);
          -ms-transform: rotate(45deg);
              transform: rotate(45deg); }
    .navigation-active .navigation-opener span {
      opacity: 0;
      visibility: hidden; }
      .navigation-active .navigation-opener span:after {
        opacity: 0;
        visibility: hidden; }
  .navigation-drop .nav-menu {
    line-height: 0;
    font-size: 0;
    letter-spacing: 0; }
    .navigation-drop .nav-menu li {
      display: inline-block;
      letter-spacing: normal;
      font-size: 16px;
      line-height: 1.2;
      vertical-align: top; }
      .navigation-drop .nav-menu li:not(:last-child) {
        padding-right: 20px; }
      .navigation-drop .nav-menu li.active-link a {
        color: #ed145b !important; }
      .navigation-drop .nav-menu li a {
        color: #fff;
        font-weight: 700; }
        .navigation-drop .nav-menu li a:hover {
          color: #ed145b; }

@media (max-width: 1023px) {
  .navigation .navigation-drop {
    -webkit-transition: visibility 0.3s ease-in-out, opacity 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
    transition: visibility 0.3s ease-in-out, opacity 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
    -o-transition: transform 0.3s ease-in-out, visibility 0.3s ease-in-out, opacity 0.3s ease-in-out;
    transition: transform 0.3s ease-in-out, visibility 0.3s ease-in-out, opacity 0.3s ease-in-out;
    transition: transform 0.3s ease-in-out, visibility 0.3s ease-in-out, opacity 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    -webkit-transform: translateX(-100%);
        -ms-transform: translateX(-100%);
            transform: translateX(-100%);
    visibility: hidden;
    opacity: 0;
    background: #5a5a5a;
    padding: 100px 15px;
    overflow: auto; }
    .navigation .navigation-drop .nav-menu {
      font-size: 24px; }
      .navigation .navigation-drop .nav-menu li {
        display: block;
        text-align: center; }
        .navigation .navigation-drop .nav-menu li:not(:last-child) {
          padding: 0 0 50px; }
        .navigation .navigation-drop .nav-menu li a {
          font-size: 28px; }
    .navigation-active .navigation .navigation-drop {
      opacity: 1;
      visibility: visible;
      -webkit-transform: translateX(0);
          -ms-transform: translateX(0);
              transform: translateX(0); }
    .resize-active .navigation .navigation-drop {
      -webkit-transition: none;
      -o-transition: none;
      transition: none; }
  .navigation-opener {
    display: block; }
    .navigation-active .navigation-opener {
      position: fixed;
      right: 6%; } }

.info-section {
  background-position: 50% 50%;
  -webkit-background-size: cover;
          background-size: cover;
  background-repeat: no-repeat;
  position: relative;
  text-align: center;
  z-index: -1; }
  .info-section:before {
    content: '';
    display: inline-block;
    vertical-align: middle;
    overflow: hidden;
    width: 1px;
    min-height: 800px;
    margin: 0 0 0 -5px; }

.info-block {
  display: inline-block;
  vertical-align: middle;
  max-width: 980px;
  z-index: 1;
  text-align: center;
  margin: 0 auto;
  color: #fff;
  font-size: 22px;
  padding: 100px 15px; }
  .info-block h1 {
    text-transform: uppercase; }
  .info-block p {
    margin: 0 0 70px; }

@media (max-width: 1023px) {
  .info-section {
    padding: 0; }
    .info-section:before {
      min-height: 650px; }
    .info-section .info-block {
      font-size: 16px; } }

@media (max-width: 767px) {
  .info-section:before {
    content: none; }
  .info-section .info-block {
    padding: 90px 15px 60px; }
    .info-section .info-block h1 {
      font-size: 32px; }
    .info-section .info-block p {
      margin: 0 0 30px; } }

@media (max-width: 479px) {
  .info-block h1 {
    font-size: 28px; } }

.description-section {
  background: #f4f4f4;
  padding: 150px 0 80px;
  position: relative;
  z-index: -2; }
  .description-section:after {
    content: '';
    position: absolute;
    bottom: 97%;
    left: 0;
    right: 0;
    height: 40px;
    background: #ed145b;
    z-index: -1;
    -webkit-transform: rotate(-1deg);
        -ms-transform: rotate(-1deg);
            transform: rotate(-1deg); }
  .description-section .image-block {
    width: 55%;
    display: inline-block;
    position: absolute; }
    .description-section .image-block .image-box {
      margin: -3% 10% -20% -5%; }
      .description-section .image-block .image-box img {
        width: 100%;
        display: block;
        height: 100%; }
  .description-section .description-block {
    width: 45%;
    display: inline-block;
    margin-right: 30px; }
    .description-section .description-block h2:after {
      left: 0;
      -webkit-transform: translateX(0);
          -ms-transform: translateX(0);
              transform: translateX(0); }
    .description-section .description-block p {
      margin: 0 0 50px; }

@media (max-width: 1023px) {
  .description-section {
    padding: 80px 0 60px; }
    .description-section:after {
      -webkit-transform: rotate(-2deg);
          -ms-transform: rotate(-2deg);
              transform: rotate(-2deg);
      bottom: 98%; }
    .description-section .description-wrapper {
      display: table; }
    .description-section .description-block {
      width: 100%;
      padding: 0 0 30px;
      display: table-footer-group;
      margin: 0; }
    .description-section .image-block {
      position: inherit;
      width: 100%;
      display: table-header-group; }
      .description-section .image-block .image-box {
        margin: 0; } }

@media (max-width: 767px) {
  .description-section {
    padding: 40px 0 40px; }
    .description-section .description-block {
      font-size: 15px;
      margin: 0; }
      .description-section .description-block p {
        margin: 0 0 20px; } }

.service-section {
  padding: 150px 0 90px; }

.list-items {
  line-height: 0;
  font-size: 0;
  letter-spacing: 0;
  margin: 0 -30px; }
  .list-items li {
    display: inline-block;
    width: 25%;
    text-align: center;
    line-height: 2;
    font-size: 15px;
    letter-spacing: normal;
    padding: 0 30px 30px;
    vertical-align: top; }
    .list-items li:first-child {
      margin: 0; }
    .list-items li .image-block {
      display: block;
      width: 130px;
      height: 130px;
      border: 1px solid rgba(0, 0, 0, 0.3);
      -webkit-border-radius: 50%;
              border-radius: 50%;
      position: relative;
      -webkit-transition: border-color 0.3s ease-in-out;
      -o-transition: border-color 0.3s ease-in-out;
      transition: border-color 0.3s ease-in-out;
      margin: 0 auto 30px; }
      .list-items li .image-block img {
        position: absolute;
        top: 50%;
        left: 50%;
        -webkit-transform: translate(-50%, -50%);
            -ms-transform: translate(-50%, -50%);
                transform: translate(-50%, -50%);
        max-width: 57px; }
    .list-items li h3:not(:last-child) {
      margin: 0 0 20px; }
    .list-items li h3 a {
      text-transform: uppercase;
      -webkit-transition: color 0.3s ease-in-out;
      -o-transition: color 0.3s ease-in-out;
      transition: color 0.3s ease-in-out; }
      .list-items li h3 a:not(:last-child) {
        margin-bottom: 30px; }
      .list-items li h3 a:hover {
        color: #5a5a5a; }

@media (max-width: 1023px) {
  .service-section {
    padding: 90px 0 30px; }
  .list-items {
    margin: 0 -15px; }
    .list-items li {
      padding: 0 15px 30px; } }

@media (max-width: 767px) {
  .service-section {
    padding: 40px 0 30px; }
  .list-items {
    margin: 0; }
    .list-items li {
      width: 50%;
      padding: 0 0 30px; } }

@media (max-width: 479px) {
  .list-items li {
    width: 100%; }
  .list-items h3 {
    font-size: 16px; } }

.carousel-section {
  background-position: 50% 50%;
  -webkit-background-size: cover;
          background-size: cover;
  position: relative;
  text-align: center;
  padding: 100px 0; }

@media (max-width: 1023px) {
  .carousel-section {
    padding: 30px 0; } }

@media (max-width: 767px) {
  .carousel-section {
    padding: 30px 0; } }

.price-section {
  padding: 150px 0 120px;
  background: #f4f4f4; }
  .price-section .head-block {
    margin: 0 auto 60px; }

.price-items {
  margin: 0 -15px;
  line-height: 0;
  font-size: 0;
  letter-spacing: 0; }
  .price-items > li {
    width: 25%;
    display: inline-block;
    padding: 0 15px 15px;
    line-height: 2;
    font-size: 15px;
    letter-spacing: normal;
    vertical-align: top; }

.price-item {
  background: #fff; }
  .price-item .price-block {
    background: #5a5a5a;
    color: #fff;
    padding: 30px 30px 55px;
    text-align: center;
    position: relative; }
  .price-item .price {
    font-size: 50px;
    font-weight: 700;
    display: block;
    line-height: 1; }
    .price-item .price sub {
      bottom: 0;
      font-size: 20px;
      font-style: normal; }
  .price-item .item-name {
    display: block;
    margin-bottom: -10%;
    position: absolute;
    top: 86%;
    left: 50%;
    -webkit-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
            transform: translateX(-50%);
    background: #f4f4f4;
    color: #5a5a5a;
    -webkit-border-radius: 24px;
            border-radius: 24px;
    padding: 15px 15px;
    font-size: 15px;
    font-weight: 700;
    line-height: 1;
    min-width: 200px;
    text-transform: uppercase; }
  .price-item .active-block {
    background: #ed145b; }
  .price-item .description-block {
    text-align: center;
    padding: 60px 30px 30px; }
  .price-item ul {
    padding-bottom: 40px; }
    .price-item ul li {
      width: 100%; }
      .price-item ul li:not(:last-child) {
        padding: 0 0 15px; }
  .price-item .button {
    margin: 0 -30px; }

@media (max-width: 1023px) {
  .price-section {
    padding: 90px 0 60px; }
  .price-items li {
    width: 50%;
    padding: 0 15px 30px; } }

@media (max-width: 767px) {
  .price-section {
    padding: 40px 0 30px; }
  .price-items {
    margin: 0; }
    .price-items li {
      width: 100%;
      padding: 0 0 30px; }
  .price-item .item-name {
    width: 95%; }
  .price-item .button {
    width: 105%; }
  .price-item ul {
    padding-bottom: 15px; } }

.company-info {
  padding: 145px 0 55px; }

.info-items {
  margin: 0 -20px;
  line-height: 0;
  font-size: 0;
  letter-spacing: 0; }
  .info-items > li {
    line-height: 2;
    font-size: 15px;
    letter-spacing: normal;
    width: 33.33333%;
    display: inline-block;
    padding: 0 20px 80px 20px;
    vertical-align: top; }
    .info-items > li .items-image {
      width: 50px;
      float: left;
      margin-right: 30px; }
      .info-items > li .items-image img {
        max-width: 57px;
        width: 100%; }
    .info-items > li .item-description {
      overflow: hidden; }
      .info-items > li .item-description h3 {
        text-transform: uppercase;
        color: #ed145b;
        margin: 0 0 30px 0; }

@media (max-width: 1023px) {
  .company-info {
    padding: 70px 0 60px; }
    .company-info .info-items {
      margin: 0 -15px; }
      .company-info .info-items li {
        padding: 0 15px 60px 15px; }
        .company-info .info-items li .items-image {
          margin-right: 20px; } }

@media (max-width: 767px) {
  .company-info {
    padding: 40px 0 20px; }
    .company-info .info-items {
      margin: 0; }
      .company-info .info-items li {
        width: 100%;
        padding: 0 0 30px; }
        .company-info .info-items li .item-description h3 {
          font-size: 16px; } }

.slogan-section {
  background: #ed145b;
  padding: 80px 0; }
  .slogan-section .slogan-text {
    font-size: 38px;
    color: #fff;
    text-transform: uppercase;
    line-height: 1.2;
    display: inline-block;
    max-width: 965px;
    padding-right: 15px; }
    .slogan-section .slogan-text b {
      font-weight: 600; }
  .slogan-section .button {
    background: #fff;
    color: #ed145b; }

@media (max-width: 1199px) {
  .slogan-section {
    text-align: center; }
    .slogan-section .slogan-text {
      width: 100%;
      padding-bottom: 30px;
      font-size: 32px; }
    .slogan-section .button {
      -webkit-transform: translateX(-50%);
          -ms-transform: translateX(-50%);
              transform: translateX(-50%);
      left: 50%;
      position: relative;
      display: block; } }

@media (max-width: 1023px) {
  .slogan-section {
    padding: 60px 0; }
    .slogan-section .slogan-text {
      font-size: 22px;
      text-align: center; } }

@media (max-width: 767px) {
  .slogan-section {
    padding: 40px 0 40px; }
    .slogan-section .slogan-text {
      font-size: 22px; }
    .slogan-section .button {
      width: 100%; } }

.updates-section {
  padding: 145px 0 60px;
  position: relative; }
  .updates-section .bottom-section {
    text-align: center; }

.updates-info {
  line-height: 0;
  font-size: 0;
  letter-spacing: 0;
  margin: 0 -15px;
  padding: 0 0 55px; }
  .updates-info h3 {
    text-transform: uppercase; }
  .updates-info li {
    line-height: 2;
    font-size: 15px;
    letter-spacing: normal;
    display: inline-block;
    width: 33.33333%;
    padding: 0 15px 60px;
    vertical-align: top; }

@media (max-width: 1023px) {
  .updates-section {
    padding: 60px 0 30px; }
  .updates-info li {
    width: 50%;
    padding: 0 15px 40px; } }

@media (max-width: 767px) {
  .updates-section {
    padding: 40px 0 30px; }
  .updates-info {
    padding: 0 0 30px; }
    .updates-info li {
      width: 100%;
      padding: 0 15px 20px; } }

.text-section {
  padding: 145px 0; }
  .text-section:before {
    content: none; }
  .text-section .info-block {
    padding: 0;
    font-size: 15px;
    max-width: 700px; }
    .text-section .info-block h2 {
      color: #fff; }
  .text-section:after {
    content: none; }

@media (max-width: 1023px) {
  .text-section {
    padding: 90px 0; } }

@media (max-width: 767px) {
  .text-section {
    padding: 40px 0; } }

.content-section {
  padding: 145px 0 145px; }
  .content-section:after {
    content: none; }
  .content-section .image-block {
    width: 55%;
    display: inline-block;
    left: 0;
    top: 50%;
    -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
            transform: translateY(-50%); }
    .content-section .image-block .image-box {
      margin: 0 10%;
      -webkit-box-shadow: 0px 10px 17px 0px rgba(0, 0, 0, 0.16);
              box-shadow: 0px 10px 17px 0px rgba(0, 0, 0, 0.16); }
      .content-section .image-block .image-box img {
        width: 100%;
        height: 100%;
        display: block; }
  .content-section .description-block {
    float: right;
    padding: 0 0 0 30px;
    margin: 0; }

@media (max-width: 1199px) {
  .content-section .image-block .image-box {
    margin: 0 5%; } }

@media (max-width: 1023px) {
  .content-section {
    padding: 80px 0 60px; }
    .content-section .image-block {
      width: 100%;
      padding: 0 0 30px;
      left: auto;
      top: auto;
      -webkit-transform: none;
          -ms-transform: none;
              transform: none; }
      .content-section .image-block .image-box {
        margin: 0; }
    .content-section .description-block {
      padding: 0;
      width: 100%; } }

@media (max-width: 767px) {
  .content-section {
    padding: 40px 0; } }

.show-button {
  text-transform: uppercase;
  font-weight: 400;
  text-align: center;
  display: inline-block;
  vertical-align: top; }
  .show-button i {
    display: block; }

.play-link {
  text-transform: uppercase;
  display: inline-block;
  position: relative;
  padding-right: 40px; }
  .play-link i {
    position: absolute;
    top: 50%;
    -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
            transform: translateY(-50%);
    font-size: 28px;
    right: 0; }

.section-caption {
  margin: 0 0 40px;
  padding: 0 0 45px;
  position: relative;
  line-height: 1.4; }
  .section-caption:after {
    content: '';
    position: absolute;
    bottom: 0px;
    width: 200px;
    height: 2px;
    background: #ed145b;
    left: 50%;
    -webkit-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
            transform: translateX(-50%); }

@media (max-width: 1023px) {
  .section-caption {
    margin: 0 0 25px;
    padding: 0 0 25px; } }

@media (max-width: 767px) {
  .section-caption {
    font-size: 26px; } }

.cycle-gallery {
  position: relative; }
  .cycle-gallery .mask {
    overflow: hidden;
    width: 100%; }
    .cycle-gallery .mask .slideset {
      width: 99999px;
      float: left; }
  .cycle-gallery .slide {
    width: 100%;
    float: left; }
    .cycle-gallery .slide blockquote {
      margin: 0 auto;
      padding: 100px 15px;
      max-width: 860px; }
      .cycle-gallery .slide blockquote q:after, .cycle-gallery .slide blockquote q:before {
        content: '';
        position: absolute;
        bottom: 0;
        left: 50%;
        -webkit-transform: translateX(-50%);
            -ms-transform: translateX(-50%);
                transform: translateX(-50%);
        width: 65px;
        height: 50px;
        background: url("../img/img-carousel.png") no-repeat;
        -webkit-background-size: cover;
                background-size: cover; }
      .cycle-gallery .slide blockquote q:before {
        top: 0;
        -webkit-transform: rotate(180deg) translateX(50%);
            -ms-transform: rotate(180deg) translateX(50%);
                transform: rotate(180deg) translateX(50%); }
  .cycle-gallery .btn-prev,
  .cycle-gallery .btn-next {
    position: absolute;
    top: 50%;
    -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
            transform: translateY(-50%);
    color: rgba(255, 255, 255, 0.5);
    -webkit-transition: color 0.3s ease-in-out;
    -o-transition: color 0.3s ease-in-out;
    transition: color 0.3s ease-in-out;
    font-size: 28px; }
    .cycle-gallery .btn-prev:hover,
    .cycle-gallery .btn-next:hover {
      color: #ed145b; }
    .cycle-gallery .btn-prev i,
    .cycle-gallery .btn-next i {
      display: block; }
  .cycle-gallery .btn-prev {
    left: 0; }
  .cycle-gallery .btn-next {
    right: 0; }

@media (max-width: 1199px) {
  .cycle-gallery .btn-prev {
    left: 10px; }
  .cycle-gallery .btn-next {
    right: 10px; } }

@media (max-width: 1023px) {
  .cycle-gallery blockquote {
    padding: 30px 15px; }
    .cycle-gallery blockquote q:after, .cycle-gallery blockquote q:before {
      width: 50px;
      height: 40px;
      -webkit-background-size: cover;
              background-size: cover; }
  .cycle-gallery .btn-prev {
    left: 10px; }
  .cycle-gallery .btn-next {
    right: 10px; } }

@media (max-width: 767px) {
  .cycle-gallery .slide blockquote {
    padding: 70px 15px; }
  .cycle-gallery .btn-prev {
    left: -10px; }
  .cycle-gallery .btn-next {
    right: -10px; } }

.article .item-image {
  display: block;
  position: relative;
  overflow: hidden; }
  .article .item-image img {
    display: block;
    width: 100%; }
  .article .item-image:after {
    content: '';
    position: absolute;
    top: 97%;
    left: 0;
    z-index: 1;
    right: 0;
    background: #ed145b;
    height: 21px;
    -webkit-transform: rotate(2deg);
        -ms-transform: rotate(2deg);
            transform: rotate(2deg); }
  .article .item-image:before {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: #ed145b;
    z-index: 1;
    opacity: 0;
    visibility: hidden;
    -webkit-transition: opacity 0.2s linear, visibility 0.2s linear;
    -o-transition: opacity 0.2s linear, visibility 0.2s linear;
    transition: opacity 0.2s linear, visibility 0.2s linear; }
  .article .item-image .icon-search {
    position: absolute;
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    opacity: 0;
    visibility: hidden;
    z-index: 2;
    color: #fff;
    font-size: 48px;
    -webkit-transition: opacity 0.3s linear, visibility 0.3s linear;
    -o-transition: opacity 0.3s linear, visibility 0.3s linear;
    transition: opacity 0.3s linear, visibility 0.3s linear; }
  .article .item-image:hover .icon-search {
    opacity: 1;
    visibility: visible; }
  .article .item-image:hover:before {
    opacity: 0.9;
    visibility: visible; }
  .article .item-image:hover:after {
    opacity: 0;
    visibility: hidden;
    -webkit-transition: opacity 0.3s linear, visibility 0.3s linear;
    -o-transition: opacity 0.3s linear, visibility 0.3s linear;
    transition: opacity 0.3s linear, visibility 0.3s linear; }

.article .updates-description {
  padding: 25px 20px;
  background: #f4f4f4;
  position: relative;
  z-index: 2; }
  .article .updates-description h3 a {
    color: #5a5a5a;
    -webkit-transition: color 0.3s ease-in-out;
    -o-transition: color 0.3s ease-in-out;
    transition: color 0.3s ease-in-out; }
    .article .updates-description h3 a:hover {
      color: #ed145b; }

.head-block {
  text-align: center;
  max-width: 700px;
  margin: 0 auto 90px; }

@media (max-width: 1023px) {
  .head-block {
    margin: 0 auto 60px; } }

@media (max-width: 767px) {
  .head-block {
    margin: 0 auto 40px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
